% summary plots for 12" disk, various springs, tests 2019-01-11
% Input was 1.2 rad/s 0.5 amplitude sine wave.
%
% Amplitude looks maybe reasonably predictive.  Velocities computed in basic_plot are either
% noisy or else damp out velocity.  I'm not sure it's worth spending more time on this.  Physical
% springs are a loser here I think.  

% had to convert externally because of environment problems.
files = {'sensors_2019-01-11-13-04-29.bag_sensors.mat',...
      'sensors_2019-01-11-13-15-41.bag_sensors.mat',...
'sensors_2019-01-11-12-53-04.bag_sensors.mat',...
'sensors_2019-01-11-13-28-11.bag_sensors.mat',...
'sensors_2019-01-11-13-42-18.bag_sensors.mat',...
'sensors_2019-01-11-13-54-01.bag_sensors.mat',...
'sensors_2019-01-11-14-14-01.bag_sensors.mat',...
'sensors_2019-01-11-14-21-51.bag_sensors.mat',...
'sensors_2019-01-11-14-31-15.bag_sensors.mat',...
'sensors_2019-01-11-14-44-11.bag_sensors.mat',...
'sensors_2019-01-11-14-54-29.bag_sensors.mat',...
'sensors_2019-01-11-15-05-01.bag_sensors.mat',...
'sensors_2019-01-11-15-23-24.bag_sensors.mat'};


TWINS = [1.547229982511774   1.547230001852433; ...
   1.547230785557300   1.547230794662480; ...
   1.547229255587467   1.547229296840731; ...
   1.547231427708877   1.547231445659269; ...
   1.547232396377284   1.547232429862924; ...
   1.547233462075718   1.547233480874673; ...
   1.547234142819843   1.547234187728460; ...
   1.547234618113577   1.547234631364230; ...
   1.547235219740973   1.547235242503925; ...
   1.547235921070496   1.547235936475196; ...
   1.547236769466248   1.547236777472528; ...
   1.547237211852433   1.547237220329670; ...
   1.547238384556515   1.547238413402669]*1e9;

%KS = % get these from spreadsheet and fred's data.
% 2019/01/12 14:40:39 first cut, not LS fit to fred's data.  note #1 .33 has much lower k due to working.
KS = [0.34 0.34 0.51 0.85 0.85 0.85 0.85 0.63 0.63 1.14 1.56 1.93 inf]/2.21*40*9.81;

% Hand-selected amplitudes from TWINS above.
AMPS = [0.541237113402062,...
   0.502577319587629,...
   0.597938144329897,...
   0.612113402061855,...
   0.634020618556701,...
   0.603092783505155,...
   0.595360824742268,...
   0.618556701030928,...
   0.608247422680412,...
   0.560567010309278,...
   0.515463917525773,...
   0.515463917525773,...
   0.470360824742268];

if 0
  for n=1:length(files)  % 13 (rigid) is really bad
    %for n=[1 2 9 11 12 13];
    
    eval(sprintf('!cp %s wpp_sensors.mat',files{n}));
    
    basic_plot
    twin(TWINS(n,:))
    
    podx = sextt(pod,TWINS(n,:));
    
    disp('Pick representative peak-to-peak amplitude');
    [~,~,p2p] = gdist;
    amp(n) = p2p/2;
    %amp(n) = abs(max(podx.z)-min(podx.z));
  end
end

figure(2); clf reset;
plot(KS(1:12),amp(1:12),'o');
xlabel('Spring Constant (N/m)');
ylabel('Pod Amplitude (m)');
grid on;


% from quadratic_drag_spectrum (with monochromatic forcing).
amp_max_sim=[0.0396,...
    0.0108,...
    0.0364,...
    0.1422,...
    0.3972,...
    0.6101,...
    0.6104,...
    0.6096,...
    0.6010,...
    0.5866,...
    0.5701,...
    0.5663,...
    0.5504,...
    0.5389,...
    0.5139,...
    0.5033]
k_sim = 1e3*[ 0.000100000000000,...
   0.000359381366380,...
   0.001291549665015,...
   0.004641588833613,...
   0.016681005372001,...
   0.059948425031894,...
   0.060369230769231,...
   0.090553846153846,...
   0.111860633484163,...
   0.150923076923077,...
   0.202414479638009,...
   0.215443469003188,...
   0.276988235294118,...
   0.342684162895928,...
   0.774263682681127,...
   2.782559402207126];  %[N/m]

hold on;  plot(k_sim,amp_max_sim,'.-');
legend('Data','Simulation');
set(gca,'xscale','log');
xlim([1e1 1e4]);
title('Pod Amplitude vs. Spring Constant for 12" Disk; 0.5 m 1.2 rad/s Input Sine');
