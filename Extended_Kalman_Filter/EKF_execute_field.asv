%% Prepare workspace
clear variables;
clc

%% Load data files
start_time=1576176163.79;
directory='D:\Documents\Thesis_Research\Bigelow_12_12\processed_data\PLATYPUS\';
%variables=["ACOUSTICRB","SOURCEXY", "NAVDR"]; % MOOS data only
variables=["PF_RB","NAVDR","ACOUSTICDATA"]; % Particle filter data
for ii=1:length(variables)
    filename=directory + string(start_time) + '_' + variables(ii) + '.mat';
    load(filename);
end
directory_ADCP="D:\Documents\Thesis_Research\Bigelow_12_12\processed_data\";
load(directory_ADCP + 'AD2CPData.346.00002_1_Proc.mat');

PF_RB=PF_RB(sel,:);
NAVDR(1,:)=[];
NAVDR=NAVDR(sel,:);
NAVDR.NAV_SPEED=NAVDR.NAV_SPEED-.5;

for jj=1:length(NAVDR.NAV_HEADING)
    if NAVDR.NAV_HEADING(jj)>180
        NAVDR.NAV_HEADING(jj)=NAVDR.NAV_HEADING(jj)-360;
    elseif NAVDR.NAV_HEADING(jj)<-180
        NAVDR.NAV_HEADING(jj)=NAVDR.NAV_HEADING(jj)+360;
    end
end
%% Define origin of local coordinate system
lat=41.524590;
lon=-70.671840;

%% Define UTM structure
zone=utmzone(lat,lon);
utmstruct = defaultm('utm'); 
utmstruct.zone = zone;  
utmstruct.geoid = wgs84Ellipsoid;
utmstruct = defaultm(utmstruct);

%% Convert source GPS data to UTM
[e_gps,n_gps]=mfwdtran(utmstruct,Data.jetyak_Lat,Data.jetyak_Lon);

%% Convert origin to UTM
[x,y] = mfwdtran(utmstruct,lat,lon);

%% Convert GPS to local coordinates
e_gps=e_gps-x;
n_gps=n_gps-y;

%% Interpolate data to common time base
total_time=PF_RB.Time(end)-PF_RB.Time(1);
tenth_second=0:.1:total_time;
Interp.Time=tenth_second+PF_RB.Time(1);

Interp.e_gps=interp1(Data.jetyak_Time,e_gps,Interp.Time);
Interp.n_gps=interp1(Data.jetyak_Time,n_gps,Interp.Time);
Interp.NAV_HEADING=interp1(NAVDR.TIME,NAVDR.NAV_HEADING,Interp.Time);
Interp.NAV_SPEED=interp1(NAVDR.TIME,NAVDR.NAV_SPEED,Interp.Time);
Interp.Range=interp1(PF_RB.Time,PF_RB.Range,Interp.Time);
Interp.Bearing=interp1(PF_RB.Time,PF_RB.Bearing,Interp.Time);


%% Execute filter
%[data,epsilon_v]=NCV_field(NAVDR, SOURCEXY, ACOUSTICRB, e_gps_interp, n_gps_interp); % MOOS data
[data,epsilon_v,rho_bar,P_minus_out,H_out,S_out,K_out,z_k_out,h_out,F_out]=NCV_C_field(Interp); %PF data

%% Plot results
steps=length(Interp.Time);
mag=hypot(data(11,:),data(12,:));
dir=atan2d(data(12,:),data(11,:));

plot_dir=90-dir;
for kk=1:length(plot_dir)
    if plot_dir(kk) <0
        plot_dir(kk)=plot_dir(kk)+360;
    end
end

figure(1)
plot(1:steps,data(15,:))
title('Error Covariance Matrix Norm vs Filter Step')
xlabel('Filter Step')
ylabel('Error Covariance Matrix Norm')

figure(2)
plot(data(7,:),data(9,:),z_k_out(1,:),z_k_out(3,:),Interp.e_gps,Interp.n_gps)
axis equal
title('Filter Output Position')
xlabel('Easting position (m)')
ylabel('Northing position (m)')
legend('Filter Output','Input Measurement','Jetyak Position')

figure(3)
reset(gca)
yyaxis left
plot(1:steps,data(20,:),1:steps,data(22,:))
title('Innovation vs Filter Step')
xlabel('Filter Step')
ylabel('Position (m)')
yyaxis right
plot(1:steps,data(21,:),1:steps,data(23,:))
ylabel('Angle (degrees)')
legend('Range','Azimuth','STW','Heading')

figure(4)
plot(1:steps,mag)
% axis([0 steps 0 3])
% 
figure(5)
plot(1:steps,dir)

% figure
% plot(epsilon)
% 
% figure
% ax1 = subplot(6,1,1);
% x = 1:steps;
% y1 = mu(1,:); 
% plot(ax1,x,y1)
% axis([0 steps -2.25 2.25])
% 
% ax2 = subplot(6,1,2);
% x = 1:steps;
% y2 = mu(2,:); 
% plot(ax2,x,y2)
% axis([0 steps -2.25 2.25])
% 
% ax3 = subplot(6,1,3);
% x = 1:steps;
% y3 = mu(3,:); 
% plot(ax3,x,y3)
% axis([0 steps -2.25 2.25])
% 
% ax4 = subplot(6,1,4);
% x = 1:steps;
% y4 = mu(4,:); 
% plot(ax4,x,y4)
% axis([0 steps -2.25 2.25])
% 
% ax5 = subplot(6,1,5);
% x = 1:steps;
% y5 = mu(5,:); 
% plot(ax5,x,y5)
% axis([0 steps -2.25 2.25])
% 
% ax6 = subplot(6,1,6);
% x = 1:steps;
% y6 = mu(6,:); 
% plot(ax6,x,y6)
% axis([0 steps -2.25 2.25])
% 
% yline(ax1,1.96,'--b');
% yline(ax2,1.96,'--b');
% yline(ax3,1.96,'--b');
% yline(ax4,1.96,'--b');
% yline(ax5,1.96,'--b');
% yline(ax6,1.96,'--b');
% yline(ax1,-1.96,'--b');
% yline(ax2,-1.96,'--b');
% yline(ax3,-1.96,'--b');
% yline(ax4,-1.96,'--b');
% yline(ax5,-1.96,'--b');
% yline(ax6,-1.96,'--b');
% 
figure(6)
plot(epsilon_v_bar)


 %% Plot quiver
reset(gca);
figure(7)
quiver(data(7,:),data(9,:),data(11,:),data(12,:))